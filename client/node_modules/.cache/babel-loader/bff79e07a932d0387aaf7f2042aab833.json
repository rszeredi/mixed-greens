{"ast":null,"code":"var _jsxFileName = \"/Users/rszeredi/Developer/web/mixed-greens/client/src/contexts/StateProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext(); // children is automatically passed in\n\nexport const StateProvider = _ref => {\n  _s();\n\n  let {\n    initialState,\n    reducer,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 2\n  }, this);\n};\n\n_s(StateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["/Users/rszeredi/Developer/web/mixed-greens/client/src/contexts/StateProvider.js"],"names":["createContext","useContext","useReducer","StateContext","StateProvider","initialState","reducer","children","useStateValue"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;;AAEA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC,C,CAEP;;AACA,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,MAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,GAAD;AAAA,sBAC5B,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEL,UAAU,CAACI,OAAD,EAAUD,YAAV,CAAxC;AAAA,cACEE;AADF;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,CAAtB;;GAAMH,a;;KAAAA,a;AAMb,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAtB;;IAAMK,a","sourcesContent":["import { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\n// children is automatically passed in\nexport const StateProvider = ({ initialState, reducer, children }) => (\n\t<StateContext.Provider value={useReducer(reducer, initialState)}>\n\t\t{children}\n\t</StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n"]},"metadata":{},"sourceType":"module"}