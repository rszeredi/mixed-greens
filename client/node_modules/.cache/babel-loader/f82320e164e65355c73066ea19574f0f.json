{"ast":null,"code":"var _jsxFileName = \"/Users/rszeredi/Developer/web/mixed-greens/client/src/app/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Login from '../components/Login';\nimport { getTokenFromUrl } from '../util/spotify';\nimport { useStateValue } from '../contexts/DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const a = useStateValue();\n  console.log('useDataLayerValue()', a);\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    const _token = hash.access_token;\n    window.location.hash = ''; // don't want the token to sit in the URL for security reasons\n\n    console.log('>>TOKEN', _token);\n\n    if (_token) {\n      setToken(_token);\n      spotify.setAccessToken(_token); // give the access token to the Spotify API\n\n      spotify.getMe() // returns a promise\n      .then(user => {\n        console.log('>>user', user); // dispatch({\n        // \ttype: 'SET_USER',\n        // \tuser: user\n        // });\n      });\n    }\n  }, []); // console.log('>>user STATE', user);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Logged In!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 61\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"DLehMaA7ubHOJ+VFdBK5yqT+bcE=\", false, function () {\n  return [useStateValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rszeredi/Developer/web/mixed-greens/client/src/app/App.js"],"names":["useEffect","useState","SpotifyWebApi","Login","getTokenFromUrl","useStateValue","spotify","App","token","setToken","a","console","log","hash","_token","access_token","window","location","setAccessToken","getMe","then","user"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,sCAAP;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;;AAEA,SAASK,GAAT,GAAe;AAAA;;AACd,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMS,CAAC,GAAGL,aAAa,EAAvB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,CAAnC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,IAAI,GAAGT,eAAe,EAA5B;AACA,UAAMU,MAAM,GAAGD,IAAI,CAACE,YAApB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBJ,IAAhB,GAAuB,EAAvB,CAHe,CAGY;;AAC3BF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,MAAvB;;AAEA,QAAIA,MAAJ,EAAY;AACXL,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACAR,MAAAA,OAAO,CAACY,cAAR,CAAuBJ,MAAvB,EAFW,CAEqB;;AAChCR,MAAAA,OAAO,CACLa,KADF,GACU;AADV,OAEEC,IAFF,CAEQC,IAAD,IAAU;AACfV,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBS,IAAtB,EADe,CAEf;AACA;AACA;AACA;AACA,OARF;AASA;AACD,GAnBQ,EAmBN,EAnBM,CAAT,CALc,CAyBd;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBb,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAyB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GA5BQD,G;UAEEF,a;;;KAFFE,G;AA8BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nimport Login from '../components/Login';\nimport { getTokenFromUrl } from '../util/spotify';\nimport { useStateValue } from '../contexts/DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\tconst [ token, setToken ] = useState(null);\n\tconst a = useStateValue();\n\tconsole.log('useDataLayerValue()', a);\n\n\tuseEffect(() => {\n\t\tconst hash = getTokenFromUrl();\n\t\tconst _token = hash.access_token;\n\t\twindow.location.hash = ''; // don't want the token to sit in the URL for security reasons\n\t\tconsole.log('>>TOKEN', _token);\n\n\t\tif (_token) {\n\t\t\tsetToken(_token);\n\t\t\tspotify.setAccessToken(_token); // give the access token to the Spotify API\n\t\t\tspotify\n\t\t\t\t.getMe() // returns a promise\n\t\t\t\t.then((user) => {\n\t\t\t\t\tconsole.log('>>user', user);\n\t\t\t\t\t// dispatch({\n\t\t\t\t\t// \ttype: 'SET_USER',\n\t\t\t\t\t// \tuser: user\n\t\t\t\t\t// });\n\t\t\t\t});\n\t\t}\n\t}, []);\n\t// console.log('>>user STATE', user);\n\n\treturn <div className=\"App\">{token ? <h1>Logged In!</h1> : <Login />}</div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}