{"ast":null,"code":"var _jsxFileName = \"/Users/rszeredi/Developer/web/mixed-greens/client/src/contexts/DataLayer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataLayerContext = /*#__PURE__*/createContext(); // children is automatically passed in\n\nexport const DataLayer = _ref => {\n  _s();\n\n  let {\n    initialState,\n    reducer,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DataLayerContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 2\n  }, this);\n};\n\n_s(DataLayer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = DataLayer;\nexport const useDataLayerValue = () => {\n  _s2();\n\n  return useContext(DataLayer);\n};\n\n_s2(useDataLayerValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DataLayer\");","map":{"version":3,"sources":["/Users/rszeredi/Developer/web/mixed-greens/client/src/contexts/DataLayer.js"],"names":["createContext","useContext","useReducer","DataLayerContext","DataLayer","initialState","reducer","children","useDataLayerValue"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAtC,C,CAEP;;AACA,OAAO,MAAMI,SAAS,GAAG;AAAA;;AAAA,MAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,GAAD;AAAA,sBACxB,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEL,UAAU,CAACI,OAAD,EAAUD,YAAV,CAA5C;AAAA,cACEE;AADF;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,CAAlB;;GAAMH,S;;KAAAA,S;AAMb,OAAO,MAAMI,iBAAiB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACG,SAAD,CAAhB;AAAA,CAA1B;;IAAMI,iB","sourcesContent":["import { createContext, useContext, useReducer } from 'react';\n\nexport const DataLayerContext = createContext();\n\n// children is automatically passed in\nexport const DataLayer = ({ initialState, reducer, children }) => (\n\t<DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n\t\t{children}\n\t</DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayer);\n"]},"metadata":{},"sourceType":"module"}